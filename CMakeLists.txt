cmake_minimum_required(VERSION 3.12)

project (testvoyaplayer)
project (voyaplayer)

# Voya Player library depends on the following third-party libraries:
# - sdl2, sdl2_ttf, ffmpeg, libaom, zlib

set(EXT_LIB_DIR "${EXT_LIB_DIR}")
set(INC_DIR     "${EXT_LIB_DIR}/include")
set(LIB_DIR     "${EXT_LIB_DIR}/lib")

set(CMAKE_CXX_STANDARD          "20")
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if (ANDROID)
    set(OS "_android")
elseif (IOS)
    set(OS "_ios")

    set(CMAKE_CXX_EXTENSIONS OFF)
    set(CMAKE_MACOSX_BUNDLE  OFF)

    set(IOS_LIBS_SDL2   "-liconv -framework AudioToolbox -framework AVFAudio -framework CoreBluetooth -framework CoreFoundation -framework CoreGraphics -framework CoreHaptics -framework CoreMotion -framework Foundation -framework GameController -framework ImageIO -framework Metal -framework MobileCoreServices -framework OpenGLES -framework QuartzCore -framework UIKit")
    set(IOS_LIBS_FFMPEG "-laom -framework CoreMedia -framework CoreVideo -framework Security -framework VideoToolbox")
elseif (APPLE)
    set(OS "_macosx")

    set(CMAKE_CXX_EXTENSIONS OFF)
    set(CMAKE_CXX_FLAGS      "${CMAKE_CXX_FLAGS} -x objective-c++")

    set(MACOSX_LIBS "-framework AppKit")
elseif (LINUX)
    set(OS "_linux")

    set(GTK_INC /usr/include/gtk-3.0 /usr/include/pango-1.0 /usr/include/glib-2.0 /usr/lib/x86_64-linux-gnu/glib-2.0/include /usr/include/harfbuzz /usr/include/freetype2 /usr/include/libpng16 /usr/include/libmount /usr/include/blkid /usr/include/fribidi /usr/include/cairo /usr/include/pixman-1 /usr/include/gdk-pixbuf-2.0 /usr/include/x86_64-linux-gnu /usr/include/gio-unix-2.0 /usr/include/atk-1.0 /usr/include/at-spi2-atk/2.0 /usr/include/at-spi-2.0 /usr/include/dbus-1.0 /usr/lib/x86_64-linux-gnu/dbus-1.0/include)
    set(GTK_LIB -lgtk-3 -lgdk-3 -lz -lpangocairo-1.0 -lpango-1.0 -lharfbuzz -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0)
elseif (WIN32)
    set(OS "_windows")
    set(RC "windows/libvoyaplayer.rc")

    set(DIRENT_DIR "${DIRENT_DIR}")

    set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT testvoyaplayer)
endif()

if (WIN32)
    set(LIBS      SDL2.lib SDL2_ttf.lib avcodec.lib avdevice.lib avfilter.lib avformat.lib avutil.lib swresample.lib swscale.lib zlib.lib)
    set(TEST_LIBS SDL2.lib SDL2_ttf.lib)
else()
    set(LIBS      -lSDL2 -lSDL2_ttf -lavcodec -lavdevice -lavfilter -lavformat -lavutil -lswresample -lswscale -lz)
    set(TEST_LIBS -lSDL2 -lSDL2_ttf)
endif()

file(GLOB INC_H       "inc/*.h")
file(GLOB SOURCES_H   "src/*.h")
file(GLOB SOURCES_CPP "src/*.cpp")
file(GLOB TEST_H      "test/*.h")
file(GLOB TEST_CPP    "test/*.cpp")

if (IOS)
    add_library(voyaplayer STATIC ${SOURCES_CPP} ${SOURCES_H} ${INC_H} ${RC})
else()
    add_library(voyaplayer SHARED ${SOURCES_CPP} ${SOURCES_H} ${INC_H} ${RC})
endif()

target_compile_definitions(voyaplayer PRIVATE ${OS} _CRT_SECURE_NO_WARNINGS NOMINMAX MAKEDLL)
target_include_directories(voyaplayer PRIVATE "inc" ${INC_DIR} ${DIRENT_DIR})
target_link_directories(voyaplayer PRIVATE ${LIB_DIR})
target_link_libraries(voyaplayer PRIVATE ${LIBS})

add_executable(testvoyaplayer ${TEST_CPP} ${TEST_H} ${INC_H})
target_compile_definitions(testvoyaplayer PRIVATE ${OS} NOMINMAX)
target_include_directories(testvoyaplayer PRIVATE "inc" ${INC_DIR} ${GTK_INC})
target_link_directories(testvoyaplayer PRIVATE ${LIB_DIR})
target_link_libraries(testvoyaplayer PRIVATE voyaplayer ${TEST_LIBS} ${GTK_LIB} ${MACOSX_LIBS} ${IOS_LIBS_SDL2} ${IOS_LIBS_FFMPEG})

if (WIN32)
    set_target_properties(testvoyaplayer PROPERTIES LINK_FLAGS_DEBUG   "-SUBSYSTEM:CONSOLE,5.02")
    set_target_properties(testvoyaplayer PROPERTIES LINK_FLAGS_RELEASE "-SUBSYSTEM:WINDOWS,5.02")
endif()

set(BUILD_DIR "${CMAKE_BINARY_DIR}")
set(SRC_DIR   "${CMAKE_SOURCE_DIR}")
set(DIST_DIR  "${BUILD_DIR}/dist")

if (IOS)
    set(DLL_EXT "a")
    set(LIB_EXT "a")
    set(OUT_DIR "${BUILD_DIR}/out")
    set(CFG_DIR "Release-iphoneos/")
elseif (APPLE)
    set(DLL_EXT "dylib")
    set(LIB_EXT "dylib")
    set(OUT_DIR "${BUILD_DIR}/out")
    set(CFG_DIR "Release/")
elseif (WIN32)
    set(DLL_EXT "dll")
    set(LIB_EXT "lib")
    set(OUT_DIR "${BUILD_DIR}/$(Configuration)")
else()
    set(DLL_EXT "so")
    set(LIB_EXT "so")
    set(OUT_DIR "${BUILD_DIR}/out")
endif()

if (WIN32)
    set(LIBZ     "zlib")
    set(TEST_EXE "testvoyaplayer.exe")
else()
    set(LIB_PREP "lib")
    set(LIBZ     "libz")
    set(TEST_EXE "testvoyaplayer")
endif()

if (OS STREQUAL "_macosx")
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -id @rpath/libSDL2.dylib         ${LIB_DIR}/libSDL2.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -id @rpath/libSDL2_ttf.dylib     ${LIB_DIR}/libSDL2_ttf.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -id @rpath/libavcodec.60.dylib   ${LIB_DIR}/libavcodec.60.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -id @rpath/libavdevice.60.dylib  ${LIB_DIR}/libavdevice.60.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -id @rpath/libavfilter.9.dylib   ${LIB_DIR}/libavfilter.9.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -id @rpath/libavformat.60.dylib  ${LIB_DIR}/libavformat.60.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -id @rpath/libavutil.58.dylib    ${LIB_DIR}/libavutil.58.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -id @rpath/libswresample.4.dylib ${LIB_DIR}/libswresample.4.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -id @rpath/libswscale.7.dylib    ${LIB_DIR}/libswscale.7.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -id @rpath/libz.dylib            ${LIB_DIR}/libz.dylib)

    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libSDL2.dylib         @rpath/libSDL2.dylib         ${LIB_DIR}/libSDL2_ttf.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libavcodec.60.dylib   @rpath/libavcodec.60.dylib   ${LIB_DIR}/libavdevice.60.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libavcodec.60.dylib   @rpath/libavcodec.60.dylib   ${LIB_DIR}/libavfilter.9.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libavcodec.60.dylib   @rpath/libavcodec.60.dylib   ${LIB_DIR}/libavformat.60.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libavformat.60.dylib  @rpath/libavformat.60.dylib  ${LIB_DIR}/libavdevice.60.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libavformat.60.dylib  @rpath/libavformat.60.dylib  ${LIB_DIR}/libavfilter.9.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libavutil.58.dylib    @rpath/libavutil.58.dylib    ${LIB_DIR}/libavcodec.60.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libavutil.58.dylib    @rpath/libavutil.58.dylib    ${LIB_DIR}/libavdevice.60.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libavutil.58.dylib    @rpath/libavutil.58.dylib    ${LIB_DIR}/libavfilter.9.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libavutil.58.dylib    @rpath/libavutil.58.dylib    ${LIB_DIR}/libavformat.60.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libavutil.58.dylib    @rpath/libavutil.58.dylib    ${LIB_DIR}/libswscale.7.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libswresample.4.dylib @rpath/libswresample.4.dylib ${LIB_DIR}/libavcodec.60.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libswresample.4.dylib @rpath/libswresample.4.dylib ${LIB_DIR}/libavdevice.60.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libswresample.4.dylib @rpath/libswresample.4.dylib ${LIB_DIR}/libavfilter.9.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libswresample.4.dylib @rpath/libswresample.4.dylib ${LIB_DIR}/libavformat.60.dylib)
    add_custom_command(TARGET voyaplayer PRE_LINK COMMAND install_name_tool -change @executable_path/../Frameworks/libswscale.7.dylib    @rpath/libswscale.7.dylib    ${LIB_DIR}/libavfilter.9.dylib)
endif()

if (WIN32)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND if not exist \"${DIST_DIR}/bin\" mkdir \"${DIST_DIR}/bin\")
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND if not exist \"${DIST_DIR}/inc\" mkdir \"${DIST_DIR}/inc\")
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND if not exist \"${DIST_DIR}/lib\" mkdir \"${DIST_DIR}/lib\")
else()
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND mkdir -p \"${DIST_DIR}/bin\")
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND mkdir -p \"${DIST_DIR}/inc\")
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND mkdir -p \"${DIST_DIR}/lib\")

    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND mkdir \"${OUT_DIR}\")
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f  ${CFG_DIR}${LIB_PREP}voyaplayer* ${OUT_DIR}/)
endif()

add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}aom.${DLL_EXT}      ${OUT_DIR}/)
add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}SDL2.${DLL_EXT}     ${OUT_DIR}/)
add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}SDL2_ttf.${DLL_EXT} ${OUT_DIR}/)
add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIBZ}.${DLL_EXT}             ${OUT_DIR}/)

if (OS STREQUAL "_macosx")
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}avcodec.60.${DLL_EXT}   ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}avdevice.60.${DLL_EXT}  ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}avfilter.9.${DLL_EXT}   ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}avformat.60.${DLL_EXT}  ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}avutil.58.${DLL_EXT}    ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}swresample.4.${DLL_EXT} ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}swscale.7.${DLL_EXT}    ${OUT_DIR}/)
elseif (WIN32)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}avcodec-60.${DLL_EXT}   ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}avdevice-60.${DLL_EXT}  ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}avfilter-9.${DLL_EXT}   ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}avformat-60.${DLL_EXT}  ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}avutil-58.${DLL_EXT}    ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}swresample-4.${DLL_EXT} ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}swscale-7.${DLL_EXT}    ${OUT_DIR}/)
else()
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}avcodec.${DLL_EXT}    ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}avdevice.${DLL_EXT}   ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}avfilter.${DLL_EXT}   ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}avformat.${DLL_EXT}   ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}avutil.${DLL_EXT}     ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}swresample.${DLL_EXT} ${OUT_DIR}/)
    add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${LIB_DIR}/${LIB_PREP}swscale.${DLL_EXT}    ${OUT_DIR}/)
endif()

add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${OUT_DIR}/*.${DLL_EXT}             ${DIST_DIR}/bin/)
add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${OUT_DIR}/*.${DLL_EXT}             ${DIST_DIR}/lib/)
add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${OUT_DIR}/*.${LIB_EXT}             ${DIST_DIR}/lib/)
add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${SRC_DIR}/inc/*.h                  ${DIST_DIR}/inc/)
add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${SRC_DIR}/LICENSE                  ${DIST_DIR}/LICENSE.txt)
add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${EXT_LIB_DIR}/LICENSE-ffmpeg.txt   ${DIST_DIR}/)
add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${EXT_LIB_DIR}/LICENSE-libaom.txt   ${DIST_DIR}/)
add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${EXT_LIB_DIR}/LICENSE-sdl2.txt     ${DIST_DIR}/)
add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${EXT_LIB_DIR}/LICENSE-sdl2_ttf.txt ${DIST_DIR}/)
add_custom_command(TARGET voyaplayer POST_BUILD COMMAND cp -f ${EXT_LIB_DIR}/LICENSE-zlib.txt     ${DIST_DIR}/)

add_custom_command(TARGET testvoyaplayer POST_BUILD COMMAND cp -f ../img/*.bmp ${OUT_DIR}/)

if (NOT WIN32)
    add_custom_command(TARGET testvoyaplayer POST_BUILD COMMAND cp -f ${CFG_DIR}${TEST_EXE} ${OUT_DIR}/)
endif()

add_custom_command(TARGET testvoyaplayer POST_BUILD COMMAND cp -f ${OUT_DIR}/*.bmp       ${DIST_DIR}/bin/)
add_custom_command(TARGET testvoyaplayer POST_BUILD COMMAND cp -f ${OUT_DIR}/${TEST_EXE} ${DIST_DIR}/bin/)

install(DIRECTORY ${DIST_DIR}/inc/ DESTINATION ${CMAKE_INSTALL_PREFIX}/include/libvoyaplayer)
install(DIRECTORY ${DIST_DIR}/bin/ DESTINATION ${CMAKE_INSTALL_PREFIX}/bin PATTERN ${TEST_EXE} PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
install(DIRECTORY ${DIST_DIR}/lib/ DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
